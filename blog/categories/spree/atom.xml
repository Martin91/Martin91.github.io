<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: spree | Martin]]></title>
  <link href="http://Martin91.github.io/blog/categories/spree/atom.xml" rel="self"/>
  <link href="http://Martin91.github.io/"/>
  <updated>2018-02-10T21:57:53+08:00</updated>
  <id>http://Martin91.github.io/</id>
  <author>
    <name><![CDATA[Martin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Spree 2.3.0已经发布]]></title>
    <link href="http://Martin91.github.io/blog/articles/2014/07/28/spree-2-dot-3-0yi-jing-fa-bu/"/>
    <updated>2014-07-28T21:32:54+08:00</updated>
    <id>http://Martin91.github.io/blog/articles/2014/07/28/spree-2-dot-3-0yi-jing-fa-bu</id>
    <content type="html"><![CDATA[<p><strong>声明：</strong>原文来自Spree官方博客<a href="http://spreecommerce.com/blog/spree-2-3-released">Spree 2.3.0 Released</a>，原文发布日期是2014-06-30，本文仅作翻译。</p>

<p><strong>简要介绍：</strong><a href="http://spreecommerce.com/">Spree</a>是一个基于<a href="http://rubyonrails.org/">Ruby on Rails</a>开发的开源在线商城框架，提供了从商品展示购买、下单支付到库存管理以及订单管理等一系列基本功能，并且支持通过第三方扩展的形式定制或者扩展框架的功能，最新版本的Spree已经支持最新的Rails版本。</p>

<p>Spree 2.3的最新更改已经加入对Rails 4.1的支持，提供了更好的配置项的存储，更好的针对多店铺的支持，以及更好的游客追踪。Spree 2.3的发布，有赖于总的97位贡献者以及他们总的700多个的commit记录。现在，我们非常兴奋地宣布：Spree 2.3发布了！</p>

<!-- More -->


<h3>Rails 4.1 的支持</h3>

<p>现在，Rails 4.1已经得到了Spree 2.3的支持。如果你希望基于Rails 4.1进行开发，那么Spree 2.3就是特为你准备的发布版。</p>

<h3>基于序列化记录的配置项</h3>

<p>现在，所有的配置项存储在一个记录上，而不是存储在<code>spree_preferences</code>表中。这意味着，为了获取一个配置项，比如价格的计算器配置，就会触发一个数据库查询，所查询的那一行记录有一个包含了所有配置信息的命名为<code>preferences</code>的列。</p>

<p>而在此之前，对于每一个配置记录本身，可能都会有一个单独的数据库调用，而在查询到所请求的配置项之后，还是有可能会有任意数目的数据库调用产生。而现在，我们总的只需要调用一次，这意味着程序本身将会有一些速度上的提升。</p>

<h3>更好的多店铺支持</h3>

<p>我们已经添加了一个名为<code>Spree::Store</code>的model，用于支持基本的多店铺/多域名的站点。其在<code>spree-multi-domain</code>这个扩展的基础上提供了针对多店铺/多域名的基本框架。一些原有的配置项被转移到了这个model上，以此实现根据具体的店铺提供不同配置值：</p>

<ul>
<li><code>Spree::Config[:site_name]</code> 迁移到了 <code>name</code></li>
<li><code>Spree::Config[:site_url]</code> 迁移到了 <code>url</code></li>
<li><code>Spree::Config[:default_meta_description]</code> 迁移到了 <code>meta_description</code></li>
<li><code>Spree::Config[:default_meta_keywords]</code> 迁移到了 <code>meta_keywords</code></li>
<li><code>Spree::Config[:default_seo_title]</code> 迁移到了 <code>seo_title</code></li>
</ul>


<p>一个数据库迁移文件将会负责把这些原有的配置项转移到一个新的默认的store实例上。</p>

<p>一个新的名为<code>ControllerHelpers::Store</code>的Concern提供了一个<code>current_store</code>helper，可以在请求的域名的基础上，通过它获取当前店铺。</p>

<h3>更好的游客追踪</h3>

<p>现在，我们用了一个签名的cookie在浏览器中存储游客的唯一的token。通过它允许关闭了浏览器的顾客可以在再次访问时继续完成他们的购物流程。更重要的是，这也帮助作为商店主人的你方便地识别游客的订单。由于我们在访客来访时都会设置<code>cookies.signed[:guest_token]</code>，所以除了订单，或许你可以把cookie用于其他用途。</p>

<p>举个实际例子，如果游客需要收藏一个商品，你可以创建一个用于记录收藏记录的model，然后把<code>cookies.signed[:guest_token]</code>赋值给这个model中的<code>token</code>字段。这将有助于你分析当前用户在此之前的订单以及收藏记录，这对于商品推荐将是非常有用的。</p>

<h3>总结</h3>

<p>你可以从<a href="https://github.com/spree/spree/releases/tag/v2.3.0">Github</a>上浏览更详细的变更列表。</p>
]]></content>
  </entry>
  
</feed>
